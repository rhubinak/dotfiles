#!/usr/bin/sh

# Prereq:
# Use Fedora sway spin
# Enable full disk encryption

set -euo pipefail
shopt -s failglob

if [ "$(id -u)" -ne 0 ]; then
    echo 'This script must be run with root privileges' >&2
    exit 1
fi

USER=rh

# Enable RPM Fusion repository
dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
    https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

dnf upgrade --refresh

# Use maildir instead of mbox

# Tweak dnf
echo "fastestmirror=True" >> /etc/dnf/dnf.conf
echo "max_parallel_downloads=10" >> /etc/dnf/dnf.conf

dnf install \
    aerc \
    alacritty \
    awscli \
    bat \
    black \
    cargo \
    clang \
    clipman \
    cmus \
    dnf-plugin-system-upgrade \
    dnf-plugins-core \
    exfalso \
    eza \
    fd-find \
    fira-code-fonts \
    firefox-wayland \
    flac \
    flatpak \
    flameshot \
    gimp \
    git-delta \
    golang \
    helix \
    htop \
    hugo \
    hyperfine \
    ImageMagick \
    just \
    khal \
    lame \
    libreoffice \
    libX11-devel \
    libxcb \
    light \
    make \
    mako \
    mp3gain \
    mygnuhealth \
    ncdu \
    neofetch \
    neovim \
    nnn \
    openssl-devel \
    p7zip \
    p7zip-plugins \
    pass \
    pass-otp \
    php \
    php-process \
    pinentry-qt \
    powerline-fonts \
    pulseaudio-utils \
    pv \
    pylint \
    python-lsp-server \
    python3-pip \
    qbittorrent \
    qt5-qtwayland \
    restic \
    ripgrep \
    rust \
    rust-analyzer \
    sd \
    selinux-policy-devel \
    ShellCheck \
    sil-charis-fonts \
    skim \
    texlive-collection-xetex \
    texlive-eurosym \
    texlive-invoice2 \
    texlive-siunitx \
    texlive-translations \
    thefuck \
    tldr \
    util-linux-user \
    wdisplays \
    wf-recorder \
    wl-clipboard \
    wlsunset \
    wofi \
    xarchiver \
    ydotool \
    yt-dlp \
    zathura-pdf-mupdf \
    zsh

# passff-host
curl -sSL github.com/passff/passff-host/releases/latest/download/install_host_app.sh | bash -s -- firefox

#sudo dnf copr enable atim/bottom -y
#sudo dnf install bottom

#cargo install rmesg
cargo install du-dust

# Markdown viewer
cargo install mdcat

# Painless compression and decompression in the terminal
cargo install ouch

# Tiny IRC client
cargo install --git https://github.com/osa1/tiny

# Update cargo stuff
cargo install cargo-update
cargo install-update -a

# Nushell
#cargo install nu --features=extra
#echo "/home/$USER/.cargo/bin/nu" > /etc/shells
#chsh -s /home/$USER/.cargo/bin/nu $USER

# Ox
#cargo install --git https://github.com/curlpipe/ox

# Ohmyzsh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

# zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

# Fira code nerd fonts
mkdir -p /usr/share/fonts/nerd-fira
curl -fLo "/usr/share/fonts/nerd-fira/Fira Code Regular Nerd Font Complete.otf" \
    https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Regular/FiraCodeNerdFont-Regular.ttf
fc-cache -v

# Set ZSH_THEME="powerlevel10k/powerlevel10k" in ~/.zshrc
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

# Helix
dnf copr enable titaniumtown/lapce
dnf install lapce

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
nvm install node
npm install -g bash-language-server dockerfile-language-server-nodejs pyright vscode-langservers-extracted yaml-language-server
cargo install --git https://github.com/latex-lsp/texlab.git --locked

# Upgrade NodeJS
# nvm install stable --reinstall-packages-from=current

# Upgrade npm
# npm update -g

# Monica
dnf install \
    composer
    mariadb-server \
    nginx \
    php \
    php-bcmath \
    php-cli \
    php-curl \
    php-common \
    php-fpm \
    php-gd \
    php-gmp \
    php-intl \
    php-json \
    php-mbstring \
    php-mysql \
    php-opcache \
    php-redis \
    php-xml \
    php-zip \

# VScodium
sudo tee -a /etc/yum.repos.d/vscodium.repo << 'EOF'
[gitlab.com_paulcarroty_vscodium_repo]
name=gitlab.com_paulcarroty_vscodium_repo
baseurl=https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/rpms/
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg
metadata_expire=1h
EOF
dnf install codium

# Librewolf
rpm --import https://keys.openpgp.org/vks/v1/by-fingerprint/034F7776EF5E0C613D2F7934D29FBD5F93C0CFC3
dnf config-manager --add-repo https://rpm.librewolf.net
dnf update
dnf install librewolf

# Remove unneeded stuff
dnf remove \
    evince \
    firefox \
    fprintd \
    gnome-boxes \
    gnome-calendar \
    gnome-maps \
    gnome-terminal \
    gnome-tour \
    gnome-video-effects \
    gnome-weather \
    httpd \
    network-manager-applet \
    rhythmbox \
    totem \
    totem-pl-parser \
    virtualbox-guest-additions

systemctl stop bluetooth.service
systemctl disable bluetooth.service

## Kernel hardening
cat > /etc/sysctl.d/99-sysctl.conf << "EOF"
# Restrict the kernel logs to root only
kernel.dmesg_restrict=1

# Disable kexec
kernel.kexec_load_disabled=1

# Hide the kernel symbols in /proc/kallsyms
kernel.kptr_restrict=2

# Disable NMI watchdog
kernel.nmi_watchdog=0

# Disable the SysRq key
kernel.sysrq=0

# Restrict the BPF JIT compiler to root only
kernel.unprivileged_bpf_disabled=1

# Restrict the use of the ptrace() syscall to root only
kernel.yama.ptrace_scope=2

# Harden the JIT compiler against certain attacks such as heap spraying attacks
net.core.bpf_jit_harden=2

# Enable source validation to prevent certain IP spoofing methods
net.ipv4.conf.all.rp_filter=1
net.ipv4.conf.default.rp_filter=1

# Disable ICMP redirect acceptance
#net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.default.accept_redirects=0
net.ipv4.conf.all.secure_redirects=0
net.ipv4.conf.default.secure_redirects=0
net.ipv6.conf.all.accept_redirects=0
net.ipv6.conf.default.accept_redirects=0

# Disable ICMP redirect sending
net.ipv4.conf.all.send_redirects=0
net.ipv4.conf.default.send_redirects=0

# Ignore ICMP requests
net.ipv4.icmp_echo_ignore_all=1
net.ipv6.icmp.echo_ignore_all=1

# Disable TCP timestamps
net.ipv4.tcp_timestamps=0

# Disable SACK
net.ipv4.tcp_sack=0

# Enable TCP Fast Open
net.ipv4.tcp_fastopen=3

# Prevent time-wait assassination attacks
net.ipv4.tcp_rfc1337=1

# Enable TCP syncookies to prevent SYN flood attacks
#net.ipv4.tcp_syncookies=1

# Improve ASLR effectiveness for mmap
vm.mmap_rnd_bits=32
vm.mmap_rnd_compat_bits=16

# Adjust swapiness
vm.swappiness=10

EOF

## Disable kernel modules
cat > /etc/modprobe.d/custom-blocklist.conf << "EOF"
# Disable NMI watchdog
blacklist iTCO_wdt
blacklist iTCO_vendor_support

# Disable Bluetooth
install bluetooth /bin/true
install btusb /bin/true

# Disable Firewire
install firewire-core /bin/true

# Disable Thunderbolt
install thunderbolt /bin/true

# Disable Intel ME
install mei /bin/true
install mei-me /bin/true

# Disable PC Speaker to disable beeps for discretion purposes.
install pcspkr /bin/true

# Disable conntrack helper.
options nf_conntrack nf_conntrack_helper=0

# Disable uncommon filesystems.
install cramfs /bin/true
install freevxfs /bin/true
install jffs2 /bin/true
install hfs /bin/true
install hfsplus /bin/true
install udf /bin/true

# Disable uncommon network protocols.
install dccp /bin/true
install sctp /bin/true
install rds /bin/true
install tipc /bin/true
install n-hdlc /bin/true
install ax25 /bin/true
install netrom /bin/true
install x25 /bin/true
install rose /bin/true
install decnet /bin/true
install econet /bin/true
install af_802154 /bin/true
install ipx /bin/true
install appletalk /bin/true
install psnap /bin/true
install p8023 /bin/true
install llc /bin/true
install p8022 /bin/true
EOF

# Force DNSSEC, DNS over TLS and Cloudflare DNS servers. Will override router settings.
echo 'DNS=1.1.1.1 8.8.8.8' >> /etc/systemd/resolved.conf
echo 'DNSSEC=yes' >> /etc/systemd/resolved.conf
#echo 'DNSOverTLS' >> /etc/systemd/resolved.conf

# Configure firewall
# Rules are stored in /etc/sysconfig/nftables.conf
#systemctl enable nftables.service
#systemctl start nftables.service

# Hugo minifier
#go get github.com/tdewolff/minify/cmd/minify

# Brave browser
#sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/
#sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
#sudo dnf install brave-browser brave-keyring

# Workaround until the official repo plays nicely
#flatpak remote-add --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo
#flatpak install flathub-beta com.brave.Browser

# configure MPV autosub
pip3 install subliminal
git clone https://github.com/rhubinak/autosub-mpv.git
mkdir -p ~/.config/mpv/scripts
ln -s ~/autosub-mpv/autosub.lua ~/.config/mpv/scripts

# Subsync
pip3 install git+https://github.com/smacke/subsync
# subsync video.mp4 -i unsynchronized.srt -o synchronized.srt

# Java decompiler
curl `curl -s https://api.github.com/repos/java-decompiler/jd-gui/releases/latest | jq -r .assets[0].browser_download_url` -soL > jd-gui.jar

# Standard Notes
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install flathub org.standardnotes.standardnotes

# Signal
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install flathub org.signal.Signal

# Tutanota
#flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
#flatpak install flathub com.tutanota.Tutanota

# Terminalizer
#npm i -g terminalizer

# PurgeCSS
#npm i -g purgecss

# Make phone work
#dnf install jmtpfs
#mkdir ~/phone
#chmod 755 ~/phone
# Connect
#jmtpfs ~/phone
# Disconnect
#fusermount -u ~/phone

# yq
wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /home/rh/.local/bin/yq && chmod +x /home/rh/.local/bin/yq

# Restic
# Troubleshoot locks with restic list locks and restic unlock --remove-all
systemctl daemon-reload --user
systemctl start restic-backup --user
systemctl start restic-prune --user
systemctl enable --now restic-backup.timer --user
systemctl enable --now restic-prune.timer --user
